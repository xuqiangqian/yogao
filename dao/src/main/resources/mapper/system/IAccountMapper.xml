<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yogo.fm.mapper.system.IAccountMapper">
    <resultMap id="accountMap" type="com.yogo.fm.model.system.AccountEntity">

    </resultMap>
    <insert id="save">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long" keyColumn="id">
            select LAST_INSERT_ID()
        </selectKey>
        insert into fm_account (
          username,name,mobile,password,effectiveStartDate,effectiveEndDate,
          salt,token,roleId,roleName,createTime,createUser,modifyTime,modifyUser
        ) value (
        #{username},#{name},#{mobile},#{password},#{effectiveStartDate},#{effectiveEndDate},
        #{salt},#{token},#{roleId},#{roleName},#{createTime},#{createUser},#{modifyTime},#{modifyUser}
        )
    </insert>
    <insert id="batchSave" parameterType="com.yogo.fm.model.system.AccountEntity">
        insert into fm_account (
        username,name,mobile,password,effectiveStartDate,effectiveEndDate,
        salt,token,roleId,roleName,createTime,createUser,modifyTime,modifyUser
        ) values
        <foreach collection="list" item="account"  index="index" separator="," >
            (#{account.username},#{account.name},#{account.mobile},#{account.password},#{account.effectiveStartDate},#{account.effectiveEndDate},
            #{account.salt},#{account.token},#{account.roleId},#{account.roleName},#{account.createTime},#{account.createUser},#{account.modifyTime},#{account.modifyUser})
        </foreach>
    </insert>
    <update id="delete">
      update fm_account  remove = true where id = #{id}
    </update>
    <update id="update">
        update fm_account set
        <trim suffixOverrides=",">
            <if test="username != null and username != '' ">
                username = #{username},
            </if>
            <if test="name != null and name != '' ">
                name = #{name},
            </if>
            <if test="mobile != null and mobile != '' ">
                mobile = #{mobile},
            </if>
            <if test="roleId != null and roleId != '' ">
                roleId = #{roleId},
            </if>
            <if test="roleName != null and roleName != '' ">
                roleName = #{roleName},
            </if>
            <if test="token != null and token != '' ">
                token = #{token},
            </if>
            <if test="flag != null ">
                flag = #{flag},
            </if>
        </trim>
        where id = #{id}
    </update>
    <select id="find" resultType="com.yogo.fm.model.system.AccountEntity">
      select * from fm_account where id = #{id}
    </select>
    <update id="batchDelete">
        update fm_account set remove = true where id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <select id="findByUsername" resultType="com.yogo.fm.model.system.AccountEntity">
        select * from fm_account where username = #{username} and remove = false
    </select>
    <select id="findByMobile" resultType="com.yogo.fm.model.system.AccountEntity">
 select * from fm_account where mobile = #{mobile} and remove = false
    </select>

    <select id="findAllByCondition" resultMap="accountMap">
        select * from fm_account where 1=1
        <if test="username != null and username != '' ">
            and username like concat("%",#{username},"%")
        </if>
        <if test="name != null and name != '' ">
            and name like concat("%",#{name},"%")
        </if>
        <if test="mobile != null and mobile != '' ">
            and mobile like concat("%",#{mobile},"%")
        </if>
        <if test="roleId != null  ">
            and  roleId = #{roleId}
        </if>
        <if test="roleName != null and roleName != '' ">
            and  roleName like concat("%",#{roleName},"%")
        </if>
        <if test="token != null and token != '' ">
            and  token = like concat("%",#{token},"%")
        </if>
        <if test="startTime != null and endTime != null ">
            and  createTime BETWEEN #{startTime} and #{endTime}
        </if>
        and remove = false
    </select>
    <select id="findAll" resultMap="accountMap">
        select * from fm_account where remove = false and flag = true
    </select>
    <select id="findInfoByMobile" resultType="java.lang.String">
        select * from  fm_account where mobile in(
        <foreach collection="list" item="mobile" separator="," >
            #{mobile}
        </foreach>
        )
    </select>
</mapper>